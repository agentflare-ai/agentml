<?xml version="1.0" encoding="UTF-8"?>
<agent xmlns="github.com/agentflare-ai/agentml/agent"
       datamodel="ecmascript"
       use:events="../schemas/events.json"
       use:memory="github.com/agentflare-ai/agentml/memory"
       use:gemini="github.com/agentflare-ai/agentml/gemini"
       use:stdin="github.com/agentflare-ai/agentml/stdin">

  <!--
    Car Rental Specialist Agent

    Handles all car rental operations: search, book, update, cancel.

    Parameters:
    - user_message: The user's input message
    - passenger_id: Current passenger/user ID

    Returns:
    - response: The message to display to the user
  -->

  <datamodel>
    <data id="user_message" expr="''" />
    <data id="passenger_id" expr="''" />
    <data id="llm_response" expr="''" />
    <data id="pending_action" expr="null" />
    <data id="confirmation_response" expr="''" />
  </datamodel>

  <state id="classify">
    <onentry>
      <log label="SYSTEM" expr="'Car rental specialist processing: ' + user_message" />

      <gemini:generate
        model="gemini-2.0-flash-exp"
        location="_event"
        promptexpr="'Process car rental request: ' + user_message" />

      <log label="SYSTEM" expr="'Car rental specialist generated event: ' + JSON.stringify(_event)" />
    </onentry>

    <transition event="action.search"
                event:schema="events:#/components/schemas/ActionSearch"
                target="search" />

    <transition event="action.requires_confirmation"
                event:schema="events:#/components/schemas/ActionRequiresConfirmation"
                target="confirm" />

    <transition event="action.response"
                event:schema="events:#/components/schemas/ActionResponse"
                target="respond" />

    <transition event="action.needs_info"
                event:schema="events:#/components/schemas/ActionNeedsInfo"
                target="respond" />

    <transition event="complete_or_escalate"
                event:schema="events:#/components/schemas/CompleteOrEscalate"
                target="complete" />
  </state>

  <state id="search">
    <onentry>
      <log label="SYSTEM" expr="'Executing car rental search...'" />

      <script>
        var searchParams = _event.data.criteria || {};
        var location = searchParams.location || '';

        var query = 'SELECT id, name, location, vehicle_type, price_tier FROM car_rentals WHERE 1=1';
        if (location) query += " AND location LIKE '%" + location + "%'";
        query += ' LIMIT 10';
      </script>

      <memory:query sqlexpr="query" location="car_results" />

      <script>
        if (car_results && car_results.length > 0) {
          llm_response = 'I found ' + car_results.length + ' car rental options:\n';
          car_results.forEach(function(c, idx) {
            llm_response += (idx + 1) + '. ' + c.name + ' - ' + (c.vehicle_type || 'Vehicle') + ' in ' + c.location;
            if (c.price_tier) llm_response += ' (' + c.price_tier + ')';
            llm_response += '\n';
          });
        } else {
          llm_response = 'No car rentals found. Please try different search criteria.';
        }
      </script>

      <log label="SYSTEM" expr="'Car rental search results: ' + llm_response" />
    </onentry>
    <transition target="respond" />
  </state>

  <state id="confirm">
    <onentry>
      <log label="SYSTEM" expr="'Requesting confirmation for car rental action...'" />

      <assign location="pending_action" expr="_event.data" />
      <assign location="llm_response" expr="_event.data.confirmation_message" />

      <log label="BOT" expr="llm_response" />

      <stdin:read location="confirmation_response" prompt="Confirm (yes/no): " />

      <gemini:generate
        model="gemini-2.0-flash-exp"
        location="_event"
        promptexpr="'Did user confirm? Response: ' + confirmation_response" />

      <log label="SYSTEM" expr="'Confirmation event: ' + JSON.stringify(_event)" />
    </onentry>

    <transition event="confirmation.accepted"
                event:schema="events:#/components/schemas/ConfirmationAccepted"
                target="execute" />

    <transition event="confirmation.declined"
                event:schema="events:#/components/schemas/ConfirmationDeclined"
                target="cancel" />
  </state>

  <state id="execute">
    <onentry>
      <log label="SYSTEM" expr="'Executing confirmed car rental action...'" />

      <script>
        var action_key = 'car_action_' + Date.now();
      </script>

      <memory:put keyexpr="action_key" expr="pending_action" />

      <!-- Use Lite model for fast confirmation message -->
      <gemini:generate
        model="gemini-2.5-flash-lite"
        location="_event"
        promptexpr="'Generate confirmation message for completed car rental booking'" />

      <assign location="llm_response" expr="_event.data.message" />

      <log label="BOT" expr="llm_response" />
    </onentry>
    <transition target="respond" />
  </state>

  <state id="cancel">
    <onentry>
      <log label="SYSTEM" expr="'Car rental action cancelled by user'" />

      <!-- Use Lite model for fast cancellation message -->
      <gemini:generate
        model="gemini-2.5-flash-lite"
        location="_event"
        promptexpr="'Generate friendly cancellation message for car rental'" />

      <assign location="llm_response" expr="_event.data.message" />

      <log label="BOT" expr="llm_response" />
    </onentry>
    <transition target="respond" />
  </state>

  <state id="respond">
    <onentry>
      <log label="SYSTEM" expr="'Car rental specialist sending response...'" />

      <script>
        if (_event && _event.data && _event.data.message) {
          llm_response = _event.data.message;
        }
      </script>

      <log label="BOT" expr="llm_response" />
    </onentry>
    <transition target="complete" />
  </state>

  <state id="complete">
    <onentry>
      <log label="SYSTEM" expr="'Car rental specialist task complete'" />
    </onentry>
    <transition target="done" />
  </state>

  <final id="done">
    <donedata>
      <param name="response" expr="llm_response" />
    </donedata>
  </final>

</agent>
