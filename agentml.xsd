<?xml version='1.0' encoding='utf-8'?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns="github.com/agentflare-ai/agentml"
  xmlns:agentml="github.com/agentflare-ai/agentml"
  targetNamespace="github.com/agentflare-ai/agentml" elementFormDefault="qualified">
  <xsd:annotation>
    <xsd:documentation> This is the XML Schema driver file for AgentML 1.0. This schema: + sets the
      namespace for AgentML 1.0 + imports external schemas (xml.xsd) + imports AgentML common
      datatypes, attributes and content models + imports modular schemas AgentML 1.0 includes: +
      AgentML core constructs + AgentML executable content + AgentML data model and manipulation +
      AgentML external communications This schema is permissive such that it accomodates all
      datamodels, but validating documents may contain markup that is ignored in certain datamodels. </xsd:documentation>
  </xsd:annotation>

  <xsd:annotation>
    <xsd:documentation> This is the XML Schema core module for AgentML * AgentML * state * initial *
      onexit * onentry * transition * parallel * final * history * donedata * if * elsif * else *
      foreach * raise * log The core module defines these elements and the attributes. </xsd:documentation>
    <xsd:documentation source="agentml-copyright.xsd" />
  </xsd:annotation>

  <xsd:annotation>
    <xsd:documentation> XML Schema datatypes for AgentML Defines containers for the AgentML
      datatypes, many of these imported from other specifications and standards. </xsd:documentation>
    <xsd:documentation source="agentml-copyright.xsd" />
  </xsd:annotation>

  <xsd:simpleType name="Exmode.datatype">
    <xsd:annotation>
      <xsd:documentation> Describes the processor execution mode for this document, being either
        "lax" or "strict". </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="lax" />
      <xsd:enumeration value="strict" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="Binding.datatype">
    <xsd:annotation>
      <xsd:documentation> The binding type in use for the AgentML document. </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="early" />
      <xsd:enumeration value="late" />
    </xsd:restriction>
  </xsd:simpleType>


  <xsd:simpleType name="HistoryType.datatype">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="shallow" />
      <xsd:enumeration value="deep" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="TransitionType.datatype">
    <xsd:annotation>
      <xsd:documentation> The type of the transition i.e. internal or external. </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="internal" />
      <xsd:enumeration value="external" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="Boolean.datatype">
    <xsd:annotation>
      <xsd:documentation> Boolean: true or false only </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKENS">
      <xsd:enumeration value="true" />
      <xsd:enumeration value="false" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="AssignType.datatype">
    <xsd:annotation>
      <xsd:documentation> The assign type that allows for precise manipulation of the datamodel
        location. Types are: replacechildren (default), firstchild, lastchild, previoussibling,
        nextsibling, replace, delete, addattribute </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="replacechildren" />
      <xsd:enumeration value="firstchild" />
      <xsd:enumeration value="lastchild" />
      <xsd:enumeration value="previoussibling" />
      <xsd:enumeration value="nextsibling" />
      <xsd:enumeration value="replace" />
      <xsd:enumeration value="delete" />
      <xsd:enumeration value="addattribute" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="URI.datatype">
    <xsd:annotation>
      <xsd:documentation> The xsd:anyURI type and thus URI references in AgentML documents may
        contain a wide array of international characters. Implementers should reference RFC 3987 and
        the "Character Model for the World Wide Web 1.0: Resource Identifiers" in order to provide
        appropriate support for these characters in VoiceXML documents and when processing values of
        this type or mapping them to URIs. </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:anyURI" />
  </xsd:simpleType>

  <xsd:simpleType name="Integer.datatype">
    <xsd:annotation>
      <xsd:documentation>Non-negative integer</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:nonNegativeInteger" />
  </xsd:simpleType>

  <xsd:simpleType name="Duration.datatype">
    <xsd:annotation>
      <xsd:documentation> Duration allowing positive values ranging from milliseconds to days. </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\d*(\.\d+)?(ms|s|m|h|d)" />
    </xsd:restriction>
  </xsd:simpleType>


  <xsd:simpleType name="EventType.datatype">
    <xsd:annotation>
      <xsd:documentation> EventType is the name of an event. Example legal values: foo foo.bar
        foo.bar.baz </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:token">
      <xsd:pattern value="(\i|\d|\-)+(\.(\i|\d|\-)+)*" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="EventTypes.datatype">
    <xsd:annotation>
      <xsd:documentation> Custom datatype for the event attribute in AgentML based on xsd:token.
        Example legal values: * foo foo.bar foo.* foo.bar.* foo bar baz foo.bar bar.* baz.foo.* </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:token">
      <xsd:pattern
        value="\.?\*|(\i|\d|\-)+(\.(\i|\d|\-)+)*(\.\*)?(\s(\i|\d|\-)+(\.(\i|\d|\-)+)*(\.\*)?)*" />
    </xsd:restriction>
  </xsd:simpleType>

  <!-- Defines the  default CondLang datatype.        -->
  <xsd:simpleType name="CondLang.datatype">
    <xsd:annotation>
      <xsd:documentation> Conditional language is expression which must evaluate to Boolean True or
        False. The expression language must define In(stateID) as a valid expression. </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string" />
  </xsd:simpleType>

  <!-- Defines the  default LocLang datatype.         -->
  <xsd:simpleType name="LocLang.datatype">
    <xsd:annotation>
      <xsd:documentation> Location language is expression identifying a location in the datamodel. </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string" />
  </xsd:simpleType>

  <!-- Defines the default ValueLang datatype.       -->
  <xsd:simpleType name="ValueLang.datatype">
    <xsd:annotation>
      <xsd:documentation> Value language is expression return a value. </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string" />
  </xsd:simpleType>
  <xsd:annotation>
    <xsd:documentation> This is the XML Schema common attributes for AgentML </xsd:documentation>
    <xsd:documentation source="agentml-copyright.xsd" />
  </xsd:annotation>

  <xsd:attributeGroup name="Fetchtimeout.attrib">
    <xsd:annotation>
      <xsd:documentation>Used in Cache.attribs</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="fetchtimeout" type="Duration.datatype" />
  </xsd:attributeGroup>
  <xsd:attributeGroup name="Maxage.attrib">
    <xsd:annotation>
      <xsd:documentation>Used in Cache.attribs</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="maxage" type="Integer.datatype" />
  </xsd:attributeGroup>
  <xsd:attributeGroup name="Maxstale.attrib">
    <xsd:annotation>
      <xsd:documentation>Used in Cache attribs</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="maxstale" type="Integer.datatype" />
  </xsd:attributeGroup>

  <xsd:attributeGroup name="Cache.attribs">
    <xsd:annotation>
      <xsd:documentation>Cache attributes to control caching behavior</xsd:documentation>
    </xsd:annotation>
    <xsd:attributeGroup ref="Fetchtimeout.attrib" />
    <xsd:attributeGroup ref="Maxage.attrib" />
    <xsd:attributeGroup ref="Maxstale.attrib" />
  </xsd:attributeGroup>
  <xsd:annotation>
    <xsd:documentation> XML Schema content models for AgentML * agentml.extra.content * content *
      agentml.extra.attribs Defines AgentML shared content models. </xsd:documentation>
    <xsd:documentation source="agentml-copyright.xsd" />
  </xsd:annotation>

  <xsd:attributeGroup name="agentml.extra.attribs">
    <xsd:annotation>
      <xsd:documentation>group allowing attributes from other namespaces</xsd:documentation>
    </xsd:annotation>
    <xsd:anyAttribute namespace="##other" processContents="lax" />
  </xsd:attributeGroup>

  <xsd:group name="agentml.extra.content">
    <xsd:annotation>
      <xsd:documentation> group allowing elements from other namespaces </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>

  <!-- Substitution group heads for extensibility -->
  <xsd:element name="executable" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Abstract base element for executable content. Custom executable elements
        should use substitutionGroup="agentml:executable".</xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="invokable" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Abstract base element for invokable elements. Custom invoke elements should
        use substitutionGroup="agentml:invokable".</xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <!-- aml -->
  <xsd:attributeGroup name="agentml.agentml.attlist">
    <xsd:attribute name="initial" type="xsd:IDREFS" />
    <xsd:attribute name="name" type="xsd:NMTOKEN" />
    <xsd:attribute name="version" type="xsd:decimal" use="required" fixed="1.0" />
    <xsd:attribute name="datamodel" type="xsd:NMTOKEN" default="null" use="optional" />
    <xsd:attribute name="binding" type="Binding.datatype" />
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.agentml.mix">
    <xsd:choice>
      <xsd:element ref="state" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="parallel" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="final" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="datamodel" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="script" minOccurs="0" maxOccurs="unbounded" />
      <xsd:group ref="agentml.extra.content" minOccurs="0" maxOccurs="unbounded" />
    </xsd:choice>
  </xsd:group>
  <xsd:group name="agentml.agentml.content">
    <xsd:sequence>
      <xsd:group ref="agentml.agentml.mix" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.agentml.type">
    <xsd:group ref="agentml.agentml.content" />
    <xsd:attributeGroup ref="agentml.agentml.attlist" />
  </xsd:complexType>
  <xsd:element name="agentml" type="agentml.agentml.type" />
  <xsd:element name="agent" type="agentml.agentml.type" /> <!-- Alias for backwards compatibility -->

  <!-- state -->
  <xsd:attributeGroup name="agentml.state.attlist">
    <xsd:attribute name="id" type="xsd:ID" />
    <xsd:attribute name="initial" type="xsd:IDREFS" />
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.state.mix">
    <xsd:choice>
      <xsd:element ref="onentry" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="onexit" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="transition" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="initial" minOccurs="0" maxOccurs="1" />
      <xsd:element ref="state" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="parallel" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="final" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="history" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="datamodel" minOccurs="0" maxOccurs="1" />
      <xsd:element ref="agentml:invokable" minOccurs="0" maxOccurs="unbounded" />
    </xsd:choice>
  </xsd:group>
  <xsd:group name="agentml.state.content">
    <xsd:sequence>
      <xsd:group ref="agentml.state.mix" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.state.type">
    <xsd:sequence>
      <xsd:group ref="agentml.state.content" />
    </xsd:sequence>
    <xsd:attributeGroup ref="agentml.state.attlist" />
  </xsd:complexType>
  <xsd:element name="state" type="agentml.state.type" />

  <!-- initial -->
  <xsd:attributeGroup name="agentml.initial.attlist">
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.initial.content">
    <xsd:sequence>
      <xsd:group ref="agentml.extra.content" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="transition" minOccurs="1" maxOccurs="1" />
      <xsd:group ref="agentml.extra.content" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.initial.type">
    <xsd:group ref="agentml.initial.content" />
    <xsd:attributeGroup ref="agentml.initial.attlist" />
  </xsd:complexType>
  <xsd:element name="initial" type="agentml.initial.type" />

  <!-- onentry -->
  <xsd:attributeGroup name="agentml.onentry.attlist">
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.onentry.content">
    <xsd:sequence>
      <xsd:group ref="agentml.core.executablecontent" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.onentry.type">
    <xsd:group ref="agentml.onentry.content" />
    <xsd:attributeGroup ref="agentml.onentry.attlist" />
  </xsd:complexType>
  <xsd:element name="onentry" type="agentml.onentry.type" />

  <!-- onexit -->
  <xsd:attributeGroup name="agentml.onexit.attlist">
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.onexit.content">
    <xsd:sequence>
      <xsd:group ref="agentml.core.executablecontent" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.onexit.type">
    <xsd:group ref="agentml.onexit.content" />
    <xsd:attributeGroup ref="agentml.onexit.attlist" />
  </xsd:complexType>
  <xsd:element name="onexit" type="agentml.onexit.type" />

  <!-- transition -->
  <xsd:attributeGroup name="agentml.transition.attlist">
    <xsd:attribute name="event" type="EventTypes.datatype" />
    <xsd:attribute name="cond" type="CondLang.datatype" />
    <xsd:attribute name="target" type="xsd:IDREFS" />
    <xsd:attribute name="type" type="TransitionType.datatype" />
    <xsd:attribute name="schema" type="xsd:string" />
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.transition.content">
    <xsd:sequence>
      <xsd:group ref="agentml.core.executablecontent" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.transition.type">
    <xsd:group ref="agentml.transition.content" />
    <xsd:attributeGroup ref="agentml.transition.attlist" />
  </xsd:complexType>
  <xsd:element name="transition" type="agentml.transition.type" />

  <!-- parallel -->
  <xsd:attributeGroup name="agentml.parallel.attlist">
    <xsd:attribute name="id" type="xsd:ID" />
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.parallel.mix">
    <xsd:choice>
      <xsd:element ref="onentry" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="onexit" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="transition" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="state" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="parallel" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="history" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="datamodel" minOccurs="0" maxOccurs="1" />
      <xsd:element ref="agentml:invokable" minOccurs="0" maxOccurs="unbounded" />
    </xsd:choice>
  </xsd:group>
  <xsd:group name="agentml.parallel.content">
    <xsd:sequence>
      <xsd:group ref="agentml.parallel.mix" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.parallel.type">
    <xsd:group ref="agentml.parallel.content" />
    <xsd:attributeGroup ref="agentml.parallel.attlist" />
  </xsd:complexType>
  <xsd:element name="parallel" type="agentml.parallel.type" />

  <!-- final -->
  <xsd:attributeGroup name="agentml.final.attlist">
    <xsd:attribute name="id" type="xsd:ID" />
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.final.mix">
    <xsd:choice>
      <xsd:element ref="onentry" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="onexit" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="donedata" minOccurs="0" maxOccurs="1" />
      <xsd:group ref="agentml.extra.content" minOccurs="0" maxOccurs="unbounded" />
    </xsd:choice>
  </xsd:group>
  <xsd:group name="agentml.final.content">
    <xsd:sequence>
      <xsd:group ref="agentml.final.mix" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.final.type">
    <xsd:group ref="agentml.final.content" />
    <xsd:attributeGroup ref="agentml.final.attlist" />
  </xsd:complexType>
  <xsd:element name="final" type="agentml.final.type" />

  <!-- history -->
  <xsd:attributeGroup name="agentml.history.attlist">
    <xsd:attribute name="id" type="xsd:ID" />
    <xsd:attribute name="type" type="HistoryType.datatype" />
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.history.content">
    <xsd:sequence>
      <xsd:group ref="agentml.extra.content" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="transition" minOccurs="1" maxOccurs="1" />
      <xsd:group ref="agentml.extra.content" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.history.type">
    <xsd:group ref="agentml.history.content" />
    <xsd:attributeGroup ref="agentml.history.attlist" />
  </xsd:complexType>
  <xsd:element name="history" type="agentml.history.type" />


  <!-- donedata -->
  <xsd:attributeGroup name="agentml.donedata.attlist">
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.donedata.content">
    <xsd:choice>
      <xsd:element ref="content" minOccurs="0" maxOccurs="1" />
      <xsd:element ref="param" minOccurs="0" maxOccurs="unbounded" />
    </xsd:choice>
  </xsd:group>
  <xsd:complexType name="agentml.donedata.type">
    <xsd:group ref="agentml.donedata.content" />
    <xsd:attributeGroup ref="agentml.donedata.attlist" />
  </xsd:complexType>
  <xsd:element name="donedata" type="agentml.donedata.type" />

  <!-- if -->
  <xsd:attributeGroup name="agentml.if.attlist">
    <xsd:attribute name="cond" type="CondLang.datatype" use="required" />
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.if.elseif.mix">
    <xsd:sequence>
      <xsd:element ref="elseif" />
      <xsd:group ref="agentml.core.executablecontent" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="agentml.if.else.mix">
    <xsd:sequence>
      <xsd:element ref="else" />
      <xsd:group ref="agentml.core.executablecontent" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="agentml.if.content">
    <xsd:sequence>
      <xsd:group ref="agentml.core.executablecontent" minOccurs="0" maxOccurs="unbounded" />
      <xsd:group ref="agentml.if.elseif.mix" minOccurs="0" maxOccurs="1" />
      <xsd:group ref="agentml.if.else.mix" minOccurs="0" maxOccurs="1" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.if.type">
    <xsd:group ref="agentml.if.content" />
    <xsd:attributeGroup ref="agentml.if.attlist" />
  </xsd:complexType>
  <xsd:element name="if" type="agentml.if.type" substitutionGroup="agentml:executable" />

  <!-- elseif -->
  <xsd:attributeGroup name="agentml.elseif.attlist">
    <xsd:attribute name="cond" type="CondLang.datatype" use="required" />
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.elseif.mix">
    <xsd:choice>
      <!-- No content for this element -->
    </xsd:choice>
  </xsd:group>
  <xsd:group name="agentml.elseif.content">
    <xsd:sequence>
      <xsd:group ref="agentml.elseif.mix" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.elseif.type">
    <xsd:group ref="agentml.elseif.content" />
    <xsd:attributeGroup ref="agentml.elseif.attlist" />
  </xsd:complexType>
  <xsd:element name="elseif" type="agentml.elseif.type" />

  <!-- else -->
  <xsd:attributeGroup name="agentml.else.attlist">
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.else.mix">
    <xsd:choice>
      <!-- No content for this element -->
    </xsd:choice>
  </xsd:group>
  <xsd:group name="agentml.else.content">
    <xsd:sequence>
      <xsd:group ref="agentml.else.mix" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.else.type">
    <xsd:group ref="agentml.else.content" />
    <xsd:attributeGroup ref="agentml.else.attlist" />
  </xsd:complexType>
  <xsd:element name="else" type="agentml.else.type" />

  <!-- foreach -->
  <xsd:attributeGroup name="agentml.foreach.attlist">
    <xsd:attribute name="array" type="ValueLang.datatype" use="required" />
    <xsd:attribute name="item" type="xsd:string" use="required" />
    <xsd:attribute name="index" type="xsd:string" />
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.foreach.content">
    <xsd:sequence>
      <xsd:group ref="agentml.core.executablecontent" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.foreach.type">
    <xsd:group ref="agentml.foreach.content" />
    <xsd:attributeGroup ref="agentml.foreach.attlist" />
  </xsd:complexType>
  <xsd:element name="foreach" type="agentml.foreach.type" substitutionGroup="agentml:executable" />

  <!-- raise -->
  <xsd:attributeGroup name="agentml.raise.attlist">
    <xsd:attribute name="event" type="xsd:NMTOKEN" use="required" />
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.raise.mix">
    <xsd:choice>
      <!-- No content for this element -->
    </xsd:choice>
  </xsd:group>
  <xsd:group name="agentml.raise.content">
    <xsd:sequence>
      <xsd:group ref="agentml.raise.mix" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.raise.type">
    <xsd:group ref="agentml.raise.content" />
    <xsd:attributeGroup ref="agentml.raise.attlist" />
  </xsd:complexType>
  <xsd:element name="raise" type="agentml.raise.type" substitutionGroup="agentml:executable" />

  <!-- log -->
  <xsd:attributeGroup name="agentml.log.attlist">
    <xsd:attribute name="label" type="xsd:string" />
    <xsd:attribute name="expr" type="ValueLang.datatype" />
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.log.content">
    <xsd:sequence>
      <xsd:group ref="agentml.extra.content" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.log.type">
    <xsd:group ref="agentml.log.content" />
    <xsd:attributeGroup ref="agentml.log.attlist" />
  </xsd:complexType>
  <xsd:element name="log" type="agentml.log.type" substitutionGroup="agentml:executable" />


  <xsd:annotation>
    <xsd:documentation> This is the XML Schema data module for AgentML * datamodel * data * assign *
      param * script * content The data module defines these elements and their attributes. </xsd:documentation>
    <xsd:documentation source="agentml-copyright.xsd" />
  </xsd:annotation>

  <!-- datamodel -->
  <xsd:attributeGroup name="agentml.datamodel.attlist">
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.datamodel.content">
    <xsd:sequence>
      <xsd:element ref="data" minOccurs="0" maxOccurs="unbounded" />
      <xsd:group ref="agentml.extra.content" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.datamodel.type">
    <xsd:group ref="agentml.datamodel.content" />
    <xsd:attributeGroup ref="agentml.datamodel.attlist" />
  </xsd:complexType>
  <xsd:element name="datamodel" type="agentml.datamodel.type" />

  <!-- data -->
  <xsd:attributeGroup name="agentml.data.attlist">
    <xsd:attribute name="id" type="xsd:ID" use="required" />
    <xsd:attribute name="src" type="URI.datatype" />
    <xsd:attribute name="expr" type="ValueLang.datatype" />
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.data.content">
    <xsd:sequence>
      <xsd:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.data.type" mixed="true">
    <xsd:group ref="agentml.data.content" />
    <xsd:attributeGroup ref="agentml.data.attlist" />
  </xsd:complexType>
  <xsd:element name="data" type="agentml.data.type" />


  <!-- param -->
  <xsd:attributeGroup name="agentml.param.attlist">
    <xsd:attribute name="name" type="xsd:NMTOKEN" use="required" />
    <xsd:attribute name="expr" type="ValueLang.datatype" />
    <xsd:attribute name="location" type="LocLang.datatype" />
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.param.content">
    <xsd:sequence>
      <xsd:group ref="agentml.extra.content" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.param.type">
    <xsd:group ref="agentml.param.content" />
    <xsd:attributeGroup ref="agentml.param.attlist" />
  </xsd:complexType>
  <xsd:element name="param" type="agentml.param.type" />

  <!--  assign  -->
  <xsd:attributeGroup name="agentml.assign.attlist">
    <xsd:attribute name="location" type="LocLang.datatype" use="required" />
    <xsd:attribute name="expr" type="ValueLang.datatype" />
    <xsd:attribute name="type" type="AssignType.datatype" default="replacechildren" />
    <xsd:attribute name="attr" type="xsd:NMTOKEN" />
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.assign.content">
    <xsd:sequence>
      <xsd:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.assign.type" mixed="true">
    <xsd:group ref="agentml.assign.content" />
    <xsd:attributeGroup ref="agentml.assign.attlist" />
  </xsd:complexType>
  <xsd:element name="assign" type="agentml.assign.type" substitutionGroup="agentml:executable" />


  <!-- script -->
  <xsd:attributeGroup name="agentml.script.attlist">
    <xsd:attribute name="src" type="URI.datatype" />
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.script.content">
    <xsd:sequence>
      <xsd:group ref="agentml.extra.content" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.script.type" mixed="true">
    <xsd:group ref="agentml.script.content" />
    <xsd:attributeGroup ref="agentml.script.attlist" />
  </xsd:complexType>
  <xsd:element name="script" type="agentml.script.type" substitutionGroup="agentml:executable" />

  <!-- content -->
  <xsd:attributeGroup name="agentml.content.attlist">
    <xsd:attributeGroup ref="agentml.extra.attribs" />
    <xsd:attribute name="expr" type="ValueLang.datatype" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.content.content">
    <xsd:sequence>
      <xsd:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.content.type" mixed="true">
    <xsd:group ref="agentml.content.content" />
    <xsd:attributeGroup ref="agentml.content.attlist" />
  </xsd:complexType>
  <xsd:element name="content" type="agentml.content.type" />

  <xsd:annotation>
    <xsd:documentation> This is the XML Schema external module for AgentML * send * cancel * invoke
      * finalize The external module defines these elements and their attributes. </xsd:documentation>
    <xsd:documentation source="agentml-copyright.xsd" />
  </xsd:annotation>

  <!-- send -->
  <xsd:attributeGroup name="agentml.send.attlist">
    <xsd:attribute name="event" type="EventType.datatype" />
    <xsd:attribute name="eventexpr" type="ValueLang.datatype" />
    <xsd:attribute name="target" type="URI.datatype" />
    <xsd:attribute name="targetexpr" type="ValueLang.datatype" />
    <xsd:attribute name="type" type="xsd:string" default="agentml" />
    <xsd:attribute name="typeexpr" type="ValueLang.datatype" />
    <xsd:attribute name="id" type="xsd:ID" />
    <xsd:attribute name="idlocation" type="LocLang.datatype" />
    <xsd:attribute name="delay" type="Duration.datatype" default="0s" />
    <xsd:attribute name="delayexpr" type="ValueLang.datatype" />
    <xsd:attribute name="namelist" type="xsd:string" />
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.send.mix">
    <xsd:choice>
      <xsd:element ref="content" minOccurs="0" maxOccurs="1" />
      <xsd:element ref="param" minOccurs="0" maxOccurs="unbounded" />
      <xsd:group ref="agentml.extra.content" minOccurs="0" maxOccurs="unbounded" />
    </xsd:choice>
  </xsd:group>
  <xsd:group name="agentml.send.content">
    <xsd:sequence>
      <xsd:group ref="agentml.send.mix" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.send.type">
    <xsd:group ref="agentml.send.content" />
    <xsd:attributeGroup ref="agentml.send.attlist" />
  </xsd:complexType>
  <xsd:element name="send" type="agentml.send.type" substitutionGroup="agentml:executable" />

  <!-- cancel -->
  <xsd:attributeGroup name="agentml.cancel.attlist">
    <xsd:attribute name="sendid" type="xsd:IDREF" />
    <xsd:attribute name="sendidexpr" type="ValueLang.datatype" />
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.cancel.mix">
    <xsd:sequence>
      <xsd:group ref="agentml.extra.content" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="agentml.cancel.content">
    <xsd:sequence>
      <xsd:group ref="agentml.cancel.mix" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.cancel.type">
    <xsd:group ref="agentml.cancel.content" />
    <xsd:attributeGroup ref="agentml.cancel.attlist" />
  </xsd:complexType>
  <xsd:element name="cancel" type="agentml.cancel.type" substitutionGroup="agentml:executable" />


  <!-- invoke -->
  <xsd:attributeGroup name="agentml.invoke.attlist">
    <xsd:attribute name="type" type="xsd:string" default="agentml" />
    <xsd:attribute name="typeexpr" type="ValueLang.datatype" />
    <xsd:attribute name="src" type="URI.datatype" />
    <xsd:attribute name="srcexpr" type="ValueLang.datatype" />
    <xsd:attribute name="id" type="xsd:ID" />
    <xsd:attribute name="idlocation" type="LocLang.datatype" />
    <xsd:attribute name="namelist" type="xsd:string" />
    <xsd:attribute name="autoforward" type="Boolean.datatype" use="optional" default="false" />
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.invoke.mix">
    <xsd:sequence>
      <xsd:element ref="content" minOccurs="0" maxOccurs="1" />
      <xsd:element ref="param" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="finalize" minOccurs="0" maxOccurs="1" />
      <xsd:group ref="agentml.extra.content" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="agentml.invoke.content">
    <xsd:sequence>
      <xsd:group ref="agentml.invoke.mix" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.invoke.type">
    <xsd:group ref="agentml.invoke.content" />
    <xsd:attributeGroup ref="agentml.invoke.attlist" />
  </xsd:complexType>
  <xsd:element name="invoke" type="agentml.invoke.type" substitutionGroup="agentml:invokable" />

  <!-- finalize -->
  <xsd:attributeGroup name="agentml.finalize.attlist">
    <xsd:attributeGroup ref="agentml.extra.attribs" />
  </xsd:attributeGroup>
  <xsd:group name="agentml.finalize.mix">
    <xsd:sequence>
      <xsd:group ref="agentml.core.executablecontent" />
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="agentml.finalize.content">
    <xsd:sequence>
      <xsd:group ref="agentml.finalize.mix" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="agentml.finalize.type">
    <xsd:group ref="agentml.finalize.content" />
    <xsd:attributeGroup ref="agentml.finalize.attlist" />
  </xsd:complexType>
  <xsd:element name="finalize" type="agentml.finalize.type" />


  <!-- the various elements of executable content are defined in the relevant modules. 
This gathers them up into a single type -->
  <xsd:group name="agentml.core.executablecontent">
    <xsd:choice>
      <xsd:element ref="agentml:executable" minOccurs="0" maxOccurs="unbounded" />
    </xsd:choice>
  </xsd:group>

</xsd:schema>